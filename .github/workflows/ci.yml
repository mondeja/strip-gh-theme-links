name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install
        run: npm i --ignore-scripts --no-audit --no-fund
      - name: Lint
        run: npm run lint

  build:
    name: Test build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Install
        run: npm i --ignore-scripts --no-audit --no-fund
      - name: Lint
        run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use NodeJS v${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: npm i --ignore-scripts --no-audit --no-fund
      - name: Test
        run: npm test

  release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Release
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get tag metadata
        id: tag
        run: |
          TAG_TITLE=${GITHUB_REF#refs/*/}
          echo "title=$TAG_TITLE" >> $GITHUB_OUTPUT
          git -c protocol.version=2 fetch --prune --progress \
            --no-recurse-submodules origin \
            +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
          TAG_BODY="$(git tag -l --format='%(contents)' $TAG_TITLE)"
          TAG_BODY="${TAG_BODY//'%'/'%25'}"
          TAG_BODY="${TAG_BODY//$'\n'/'%0A'}"
          TAG_BODY="${TAG_BODY//$'\r'/'%0D'}"
          echo "body=$TAG_BODY" >> $GITHUB_OUTPUT
      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.title }}
          name: ${{ steps.tag.outputs.title }}
          body: ${{ steps.tag.outputs.body }}
          draft: false
          prerelease: false

  npm:
    needs: release
    name: NPM Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use NodeJS v20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Install dependencies
        run: npm i --ignore-scripts --no-audit --no-fund
      - name: Sanity check
        run: |
          npm run lint
          npm test
          npm run build
      - name: Deploy to NPM
        uses: JS-DevTools/npm-publish@v1.4.3
        with:
          token: ${{ secrets.NPM_TOKEN }}
